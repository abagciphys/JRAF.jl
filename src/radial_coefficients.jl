###########################################################################################################
###########################################################################################################
###########################################################################################################
###########################################################################################################
###########################################################################################################
###########################################################################################################
#                                         RADIAL COEFFICIENTS                                             #
###########################################################################################################
###########################################################################################################
###########################################################################################################
###########################################################################################################
###########################################################################################################
###########################################################################################################
export SlaterON, SlaterSF, SlaterSA, SlaterSB, SlaterSN, SlaterSX
###########################################################################################################
########################################## SLATER TYPE ORBITALS ###########################################
SlaterON(n::arb, ζ::arb) = ((2*ζ)^(n + 1//2))//Sqrt(Gamma(2*n + One(n)))
SlaterON(n::Real, ζ::Real) = SlaterON(RF(n), RF(ζ))

function SlaterON(n1::arb, n2::arb, ρ::arb, τ::arb)
    res1 = ((ρ*(One(τ)+τ))^(n1 + 1//2)) * ((ρ*(One(τ)-τ))^(n2 + 1//2))
    res2 = Sqrt(Gamma(2*n1 + One(n1)) * Gamma(2*n2 + One(n2)))
    res1 // res2
end
SlaterON(n1::Real, n2::Real, ρ::Real, τ::Real) = SlaterON(RF(n1), RF(n2), RF(ρ), RF(τ))
###########################################################################################################
###########################################################################################################
###########################################################################################################
#                                     SLATER TYPE SPINOR ORBITALS                                         #
###########################################################################################################
###########################################################################################################
###########################################################################################################	
########################################## NORMALIZATION FACTOR ###########################################
################# Relativistic normalization factor N_{n\kappa}
SlaterSF(n::arb, κ::Int) = ifelse(κ < 0, Abs(κ), Sqrt(κ^2 + (2*n + 1)))
SlaterSF(n::Real, κ::Int) = SlaterSF(RF(n), κ)
###########################################################################################################	
############################################## COEFFICIENT A ##############################################
################# Normalization coeeficients so called A^{\beta}_{n\kappa}
SlaterSA(β::Int, n::arb, κ::Int) = ifelse(κ < 0, (β*κ)//(2*n), (β//2)*(SlaterSF(n, κ)-κ) - (RF(1)//RF(2)))
SlaterSA(β::Int, n::Real, κ::Int) = SlaterSA(β, RF(n), RF(κ))
###########################################################################################################	
############################################## COEFFICIENT B ##############################################
################# Normalization coeeficients so called B^{\beta}_{n\kappa}
SlaterSB(β::Int, n::arb, κ::Int) = ifelse(κ < 0, Zero(RF), -β*((SlaterSF(n, κ) - κ)//(2*n + 1)))
SlaterSB(β::Int, n::Real, κ::Int) = SlaterSB(β, RF(n), RF(κ))
###########################################################################################################	
############################################## COEFFICIENT N ##############################################
################# 1/Sqrt(N) part, the dominator is used for both wave and charge density
function SlaterSN(β::Int, n::arb, κ::Int)
    res1 = SlaterSA(β, n, κ) * SlaterSA(β, n, κ) * Gamma(2*n + RF(1))
    res2 = SlaterSA(β, n, κ) * SlaterSB(β, n, κ) * Gamma(2*n + RF(2))
    res3 = SlaterSB(β, n, κ) * SlaterSB(β, n, κ) * (Gamma(2*n + RF(3)) // 4)
    res1 + res2 + res3
end
SlaterSN(β::Int, n::Real, κ::Int) = SlaterSN(β, RF(n), κ)

SlaterSN(β::Int, n::arb, κ::Int, ζ::arb) = ((2*ζ)^(n + 1//2))//Sqrt(SlaterSN(β, n, κ))
SlaterSN(β::Int, n::Real, κ::Int, ζ::Real) = SlaterSN(β, RF(n), κ, RF(ζ))

function SlaterON(β1::Int, n1::arb, κ1::Int, β2::Int, n2::arb, κ2::Int, ρ::arb, τ::arb)
    res1 = ((ρ*(One(τ)+τ))^(n1 + 1//2)) * ((ρ*(One(τ)-τ))^(n2 + 1//2))
    res2 = Sqrt(SlaterSN(β1, n1, κ1) * SlaterSN(β2, n2, κ2)) 
    res1 // res2
end
SlaterSN(β1::Int, n1::Real, κ1::Int, β2::Int, n2::Real, κ2::Int, ρ::Real, τ::Real) =
SlaterSN(β1, RF(n1), κ1, β2, RF(n2), κ2, RF(ρ), RF(τ))

function SlaterSX(β1::Int, n1::arb, κ1::Int, ζ1::arb, β2::Int, n2::arb, κ2::Int, ζ2::arb)
    a1 = SlaterSA(β1, n1, κ1)
    a2 = SlaterSA(β2, n2, κ2)
    b1 = SlaterSB(β1, n1, κ1)
    b2 = SlaterSB(β2, n2, κ2)

    x1 = ζ1 * ζ1 * a1 * a2
    x2 = ζ1 * ζ2 * b1 * a2
    x3 = ζ1 * ζ2 * a1 * b2
    x4 = ζ2 * ζ2 * b1 * b2

    x = [x1, x2, x3, x4]
    x = transpose(x)
    return x
end
SlaterSX(β1::Int, n1::Real, κ1::Int, ζ1::Real, β2::Int, n2::Real, κ2::Int, ζ2::Real) =
SlaterSX(β1, RF(n1), κ1, RF(ζ1), β2, RF(n2), κ2, RF(ζ2))